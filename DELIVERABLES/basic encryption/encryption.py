
# source: https://www.thepythoncode.com/article/encrypt-decrypt-files-symmetric-python

from cryptography.fernet import Fernet
import sys
import os

file = sys.argv[1]
input_filename_w_extention = os.path.basename(file)
# remove the .exe extension
input_filename = input_filename_w_extention[:-4]

def write_key():
    """
    Generates a key and save it into a file
    """
    key = Fernet.generate_key()
    with open(f"key.key", "wb") as key_file:
        key_file.write(key)

def load_key():
    """
    Loads the key from the current directory named `key.key`
    """
    return open(f"key.key", "rb").read()

def encrypt(filename, key):
    """
    Given a filename (str) and key (bytes), it encrypts the file and write it
    """
    f = Fernet(key)

    with open(f'{filename}', "rb") as file:
        # read all file data
        file_data = file.read()

    # encrypt data
    encrypted_data = f.encrypt(file_data)

    # write the encrypted file

    with open(f'encrypted_{input_filename}.exe', "wb+") as file:
        file.write(encrypted_data)

def decrypt(filename, key):
    """
    Given a filename (str) and key (bytes), it decrypts the file and write it
    """
    f = Fernet(key)

    with open(f'{filename}', "rb") as file:
        # read the encrypted data
        encrypted_data = file.read()

    # decrypt data
    decrypted_data = f.decrypt(encrypted_data)

    # write the original file
    with open(f'decrypted_{filename}', "wb") as file:
        file.write(decrypted_data)

# generate a new key
write_key()

# load the previously generated key
key = load_key()

# file name
# file = "data.csv"

# encrypt it
encrypt(file, key)

# decrypt it
decrypt(f'encrypted_{input_filename}.exe', key)